org: jupygoat
app: aws-python-neo-connector
service: aws-python-neo-connector

frameworkVersion: "2"

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221

plugins:
  - serverless-python-requirements
  - serverless-reqvalidator-plugin

layers:
  NeoConnector:
    name: layer-${sls:stage}-NeoConnector
    description: Add NeoConnector library to your lambda function
    package:
      artifact: src/layers/neo-connector-layer.zip
    compatibleRuntimes:
      - python3.8
      - python3.9
    compatibleArchitectures:
      - x86_64
  Pandas:
    name: layer-${sls:stage}-pandas
    package:
      artifact: src/layers/pandas-layer.zip
    compatibleRuntimes:
      - python3.8
      - python3.9
    compatibleArchitectures:
      - x86_64
  Psycopg2:
    name: layer-${sls:stage}-psycopg2
    package:
      artifact: src/layers/psycopg2-layer.zip
    compatibleRuntimes:
      - python3.8
      - python3.9
    compatibleArchitectures:
      - x86_64
  PyodbcMsSQL:
    name: layer-${sls:stage}-pyodbc-mssql
    package:
      artifact: src/layers/pyodbc-layer.zip
    compatibleRuntimes:
      - python3.8
      - python3.9
    compatibleArchitectures:
      - x86_64

functions:
  testNeoConnector:
    handler: src/lambdas/testNeoConnector.handler
    name: func-${sls:stage}-testNeoConnector
    layers:
      - { Ref: PandasLambdaLayer }
      - { Ref: Psycopg2LambdaLayer }
      - { Ref: NeoConnectorLambdaLayer }
      - { Ref: PyodbcMsSQLLambdaLayer }
    events:
      - http:
          path: testneo
          method: get
          reqValidatorName: ParameterRequestValidator
          request:
            parameters:
              querystrings:
                bucket: true
                file: true

resources:
  Resources:
    testNeoConnectorRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: iam-${sls:stage}-test-neo-connector
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
          - arn:aws:iam::aws:policy/SecretsManagerReadWrite
          - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
    ParameterRequestValidator:
      Type: AWS::ApiGateway::RequestValidator
      Properties:
        Name: ParameterRequestValidator
        RestApiId: { Ref: ApiGatewayRestApi }
        ValidateRequestBody: false
        ValidateRequestParameters: true
